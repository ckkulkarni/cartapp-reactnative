{"version":3,"names":["_react","_interopRequireWildcard","require","_createIconSet","_interopRequireDefault","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","e","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","_objectSpread","target","i","length","source","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","createMultiStyleIconSet","styles","optionsInput","undefined","styleNames","Error","options","defaultStyle","fallbackFamily","_unused","glyphValidator","__unused","iconSets","reduce","acc","name","style","createIconSet","glyphMap","fontFamily","fontFile","fontStyle","styleFromProps","props","propName","indexOf","getIconSetForProps","family","selectIconClass","iconSet","iconClass","reduceProps","prop","getStyledIconSet","getFontFamily","getRawGlyphMap","hasIcon","createStyledIconClass","selectClass","IconClass","_PureComponent","_inherits2","_super","_classCallCheck2","_createClass2","value","render","selectedIconSet","SelectedIconClass","React","createElement","PureComponent","defaultProps","font","values","StyledIconSet","Icon","Button"],"sources":["../src/createMultiStyleIconSet.ts"],"sourcesContent":["import React, { PureComponent } from 'react';\n\nimport createIconSet from './createIconSet';\n\ntype FontStyle = {\n  fontFamily: string;\n  fontFile: any;\n  glyphMap: any;\n  fontStyle: any;\n};\n\ntype FontStyles = {\n  [key: string]: FontStyle;\n};\n\nexport default function createMultiStyleIconSet(\n  styles: FontStyles,\n  optionsInput = {}\n): any {\n  const styleNames = Object.keys(styles);\n\n  if (styleNames.length === 0) {\n    throw new Error('You need to add at least one style');\n  }\n\n  const options = {\n    defaultStyle: styleNames[0],\n    fallbackFamily: (_unused: any) => styleNames[0],\n    glyphValidator: (_unused: any, __unused: any) => true,\n    ...optionsInput,\n  };\n\n  const iconSets = styleNames.reduce((acc, name) => {\n    const style = styles[name];\n\n    acc[name] = createIconSet(\n      style.glyphMap || {},\n      style.fontFamily || '',\n      style.fontFile || '',\n      style.fontStyle || {}\n    );\n\n    return acc;\n  }, {});\n\n  function styleFromProps(props) {\n    return Object.keys(props).reduce(\n      (result, propName) =>\n        styleNames.indexOf(propName) !== -1 && props[propName] === true\n          ? propName\n          : result,\n      options.defaultStyle\n    );\n  }\n\n  function getIconSetForProps(props) {\n    const { name } = props;\n    const style = styleFromProps(props);\n\n    if (options.glyphValidator(name, style)) return iconSets[style];\n\n    const family = options.fallbackFamily(name);\n\n    if (styleNames.indexOf(family) === -1) {\n      return options.defaultStyle;\n    }\n\n    return iconSets[family];\n  }\n\n  function selectIconClass(iconSet, iconClass) {\n    return iconClass.length > 0 ? iconSet[iconClass] : iconSet;\n  }\n\n  function reduceProps(props) {\n    return Object.keys(props).reduce((acc, prop) => {\n      if (styleNames.indexOf(prop) === -1) {\n        acc[prop] = props[prop];\n      }\n\n      return acc;\n    }, {});\n  }\n\n  function getStyledIconSet(style, name = '') {\n    if (styleNames.indexOf(style) === -1) {\n      return iconSets[options.defaultStyle];\n    }\n\n    return !name\n      ? iconSets[styleFromProps({ [style]: true })]\n      : getIconSetForProps({ name, [style]: true });\n  }\n\n  function getFontFamily(style = options.defaultStyle) {\n    return getStyledIconSet(style).getFontFamily();\n  }\n\n  function getRawGlyphMap(style = options.defaultStyle) {\n    return getStyledIconSet(style).getRawGlyphMap();\n  }\n\n  function hasIcon(name, style = options.defaultStyle) {\n    return options.glyphValidator(name, style);\n  }\n\n  function createStyledIconClass(selectClass = '') {\n    class IconClass extends PureComponent {\n      static defaultProps = styleNames.reduce((acc, name) => {\n        acc[name] = false;\n        return acc;\n      }, {});\n\n      static font = Object.values(styles).reduce((acc, style) => {\n        acc[style.fontFamily] = style.fontFile;\n        return acc;\n      }, {});\n\n      static Button: any;\n\n      static StyledIconSet = getStyledIconSet;\n      static getFontFamily = getFontFamily;\n      static getRawGlyphMap = getRawGlyphMap;\n      static hasIcon = hasIcon;\n\n      render() {\n        const selectedIconSet = getIconSetForProps(this.props);\n        const SelectedIconClass = selectIconClass(selectedIconSet, selectClass);\n        const props = reduceProps(this.props);\n\n        return React.createElement(SelectedIconClass, props);\n      }\n    }\n\n    return IconClass;\n  }\n\n  const Icon = createStyledIconClass();\n  Icon.Button = createStyledIconClass('Button');\n  return Icon;\n}\n"],"mappings":"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"}